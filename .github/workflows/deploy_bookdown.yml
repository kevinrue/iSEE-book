on:
  push:
  pull_request:
    branches:
      - master

name: bookdown

jobs:
  compile:
    runs-on: ${{ matrix.config.os }}
    container: ${{ matrix.config.image }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }} - ${{ matrix.config.bioc }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: macOS-latest, r: 'release', bioc: '3.11'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: Set up R
        uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - name: Set up pandoc
        uses: r-lib/actions/setup-pandoc@master

      - name: Install remotes
        run: |
          install.packages('remotes')
        shell: Rscript {0}

      - name: Set BiocManager version
        run: |
          install.packages('BiocManager')
          BiocManager::install(version = "${{ matrix.config.bioc }}", ask = FALSE)
        shell: Rscript {0}

      - name: Query dependencies
        run: |
          saveRDS(remotes::dev_package_deps(dependencies = TRUE, repos = c(getOption('repos'), BiocManager::repositories())), 'depends.Rds', version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-bioc-${{ matrix.config.bioc }}-${{ hashFiles('depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-bioc-${{ matrix.config.bioc }}-

      - name: Setup TinyTeX
        uses: r-lib/actions/setup-tinytex@v1

      - name: Install dependencies
        run: |
          local_deps <- remotes::local_package_deps(dependencies = TRUE)
          deps <- remotes::dev_package_deps(dependencies = TRUE, repos = BiocManager::repositories())
          BiocManager::install(local_deps[local_deps %in% deps$package[deps$diff != 0]], Ncpu = 2L)
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Render book (git)
        run: |
          bookdown::render_book('index.Rmd', 'bookdown::gitbook')
        shell: Rscript {0}

      - name: Render book (pdf)
        run: |
          bookdown::render_book('index.Rmd', 'bookdown::pdf_book')
        shell: Rscript {0}

      - name: Render book (epub)
        run: |
          bookdown::render_book('index.Rmd', 'bookdown::epub_book')
        shell: Rscript {0}

      - name: Deploy ðŸš€
        if: github.event_name == 'push' && github.ref == 'refs/heads/master' && matrix.config.os == 'macOS-latest' && matrix.config.r == 'release' && matrix.config.bioc == '3.11'
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          BRANCH: gh-pages
          FOLDER: _book
